import asyncio  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
import menu     # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–Ω—é

from DataBase_PostgreSQL.main_bd_postgre import execute_comment
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram import Bot, Dispatcher, executor, types
from config import bot_token, admin_daria_id, admin_erikk_id

# –ü–æ—Ç–æ–∫ –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –≤—Å–µ —Å–æ–±—ã—Ç–∏—è
loop = asyncio.new_event_loop()
asyncio.set_event_loop(loop)
storage = MemoryStorage()

bot = Bot(bot_token, parse_mode='HTML')  # –°–æ–∑–¥–∞–ª–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –ë–æ—Ç–∞
dp = Dispatcher(bot, loop=loop, storage=storage)


# –ú–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
class UserState(StatesGroup):
    fullname = State()
    comment = State()


@dp.message_handler(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üí¨")
async def get_about(message: types.Message):
    await message.answer("üå∏ –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è üå∏")
    await UserState.fullname.set()


# –ü–µ—Ä–µ–¥–∞–ª–∏ state: FSMContext –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–∞–º—è—Ç—å
@dp.message_handler(state=UserState.fullname)
async def get_username(message: types.Message, state: FSMContext):
    await state.update_data(my_nickname=message.text)
    await message.answer("–û—Ç–ª–∏—á–Ω–æ! üå∏ –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –í–∞—à –æ—Ç–∑—ã–≤")
    await UserState.next()  # –ª–∏–±–æ –∂–µ UserState.address.set()


@dp.message_handler(state=UserState.comment)
async def get_address(message: types.Message, state: FSMContext):
    await state.update_data(my_comment=message.text)

    data_comment = await state.get_data()
    await message.answer(f"üå∏ –í–∞—à –æ—Ç–∑—ã–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω üå∏\n"
                         f"–í–∞—à–µ –∏–º—è: {data_comment['my_nickname']}\n"
                         f"–í–∞—à –æ—Ç–∑—ã–≤: {data_comment['my_comment']}")

    execute_comment(message.from_user.id, message.from_user.first_name, message.from_user.username,
                    data_comment['my_nickname'], data_comment['my_comment'])

    text_comment = f"üç∞ –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ üç∞\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {data_comment['my_nickname']}" \
                   f"\n–ï–≥–æ –æ—Ç–∑—ã–≤: '{data_comment['my_comment']}'"

    await bot.send_message(chat_id=admin_erikk_id, text=text_comment)
    await bot.send_message(chat_id=admin_daria_id, text=text_comment)
    await state.finish()


if __name__ == "__main__":
    print("[INFO+] Bot started!")
    from handlers import dp, send_to_admin

    executor.start_polling(dp, on_startup=send_to_admin)  # –î–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
